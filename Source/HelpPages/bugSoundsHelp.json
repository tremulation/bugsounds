{
    "pageTitle": "bugSounds",
    "content": [
        {
            "type": "subheader",
            "text": "Introduction"
        },
        {
            "type": "text",
            "content": "BugSounds is a synth designed to simulate insect stridulation/tymbalation for use in sound design and music. Sound is generated by playing clicks at a high speed so that they form a constant note, and then applying an optional resonator. Each individual click is composed of a series of very short subclicks that, when played and overlapped together, merge into one click. The heirarchy of elements can be described like this: Song -> click -> subclick -> generated audio.\n\nTo describe a bug song, a notation language called clickCode is used. It uses a compact numerical syntax to describe how the frequency of click generation changes over time. ClickCode is also used to describe the pitch of the optional resonator. It has loops, randomization, and other features to accurately describe a wide variety of different bug songs. You must hit the button at the bottom of the UI to compile the current song and send it to the synthesizer. \n\nThe synth has three modes. The first is mono mode, the default. When a note is pressed, it plays a monophonic song. The second is chorus mode. It dynamically plays the current song with several different voices arranged at different distances around the listener. The final is synth mode (not implemented yet). This mode functions like how a normal synthesizer does, setting the click frequency based on midi notes. It also makes some subclick settings automatable. "
        },
        {
            "type": "subheader",
            "text": "Writing a Song (mono/chorus mode)"
        },
        {
            "type": "text",
            "content": "Step 1: Set up a simple subclick sequence that has the pitch you want. Don't worry if it doesn't sound right just yet. It's usually easier to set up a clickCode song first and then adjust the subclicks later.\n \nStep 2: Write the song in the frequency editor. There is a detailed description of every element you can use in the help page for the frequency editor, but here's a quick rundown. The base element of clickCode is a \"note.\" Notes consist of a pair of values. The first represents the ending frequency, and the second represents the time in miliseconds it will take to slide from the current frequency to the ending one. Separate different elements with a comma. A simple song that rises from 0 clicks to 120 clicks in 1 second, and then back to 0 is: 120 1000, 0 1000. The other base element is the pattern block. This defines the \"rhythm\" of click production. This is a very important element for changing the timbre of the song. \n\nStep 3: Now that you have a song you're happy with, go back to the subclick sequencer and add/remove/modify notes until the song sounds more like what you want it to. Also mess with the click settings. Adding just a little bit of time randomization is a very good way to humanize (buganize?)--to make the song sound less robotic.\n\nStep 4: Optionally, if you want your song to have a resonator, turn it on, and write a new clickCode song in the resonator editor. It will play alongside the frequency song. If the resonator song ends first, it will loop back to the start.\n \nStep 5: Use your finished song as-is, or activate the chorus mode to spatialize it. Note that chorus mode can eat your whole CPU if you have a bunch of bugs playing at once with the resonators on. Sorry oops sorry oopsie oops."
        }
    ]
}